{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar ConsultationService = function (_React$Component) {\n  _inherits(ConsultationService, _React$Component);\n\n  var _super = _createSuper(ConsultationService);\n\n  function ConsultationService() {\n    var _this;\n\n    _classCallCheck(this, ConsultationService);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      data: []\n    };\n\n    _this.fetchData = function _callee() {\n      var response, utilisateurs;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(fetch('http://localhost:3001/utilisateurs'));\n\n            case 2:\n              response = _context.sent;\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(response.json());\n\n            case 5:\n              utilisateurs = _context.sent;\n\n              _this.setState({\n                data: utilisateur\n              });\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    return _this;\n  }\n\n  _createClass(ConsultationService, [{\n    key: \"ComponentDidMount\",\n    value: function ComponentDidMount() {\n      this.fetchData();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return _jsxs(View, {\n        style: styles.main_container,\n        children: [_jsx(TextInput, {\n          style: styles.textinput,\n          placeholder: \"Titre du film\"\n        }), _jsx(Button, {\n          style: {\n            height: 50\n          },\n          title: \"Rechercher\",\n          onPress: function onPress() {}\n        }), _jsx(Text, {\n          children: \"pouet\"\n        }), _jsx(FlatList, {\n          data: this.state.data,\n          renderItem: function renderItem(_ref) {\n            var item = _ref.item;\n            return _jsx(View, {\n              children: _jsx(Text, {\n                children: item.nom\n              })\n            });\n          }\n        })]\n      });\n    }\n  }]);\n\n  return ConsultationService;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  main_container: {\n    flex: 1,\n    marginTop: 20\n  },\n  textinput: {\n    marginLeft: 5,\n    marginRight: 5,\n    height: 50,\n    borderColor: '#000000',\n    borderWidth: 1,\n    paddingLeft: 5\n  }\n});\nexport default ConsultationService;","map":{"version":3,"sources":["C:/Users/BENRABAH Zaky/Documents/GitHub/hackathon/Hackathon2-SYS-DEV/ReactNative/hackathon/components/ConsultationService.js"],"names":["React","ConsultationService","state","data","fetchData","fetch","response","json","utilisateurs","setState","utilisateur","styles","main_container","textinput","height","item","nom","Component","StyleSheet","create","flex","marginTop","marginLeft","marginRight","borderColor","borderWidth","paddingLeft"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;;;;;IAGMC,mB;;;;;;;;;;;;;;;UAEJC,K,GAAM;AACJC,MAAAA,IAAI,EAAC;AADD,K;;UAINC,S,GAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACcC,KAAK,CAAC,oCAAD,CADnB;;AAAA;AACHC,cAAAA,QADG;AAAA;AAAA,+CAEkBA,QAAQ,CAACC,IAAT,EAFlB;;AAAA;AAEHC,cAAAA,YAFG;;AAGT,oBAAKC,QAAL,CAAc;AAACN,gBAAAA,IAAI,EAACO;AAAN,eAAd;;AAHS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;;;;;;WAMX,6BAAmB;AACjB,WAAKN,SAAL;AACD;;;WACD,kBAAS;AACP,aACE,MAAC,IAAD;AAAM,QAAA,KAAK,EAAEO,MAAM,CAACC,cAApB;AAAA,mBACE,KAAC,SAAD;AAAW,UAAA,KAAK,EAAED,MAAM,CAACE,SAAzB;AAAoC,UAAA,WAAW,EAAC;AAAhD,UADF,EAEE,KAAC,MAAD;AAAQ,UAAA,KAAK,EAAE;AAACC,YAAAA,MAAM,EAAC;AAAR,WAAf;AAA2B,UAAA,KAAK,EAAC,YAAjC;AAA8C,UAAA,OAAO,EAAE,mBAAM,CAAE;AAA/D,UAFF,EAGE,KAAC,IAAD;AAAA;AAAA,UAHF,EAIE,KAAC,QAAD;AACE,UAAA,IAAI,EAAE,KAAKZ,KAAL,CAAWC,IADnB;AAEE,UAAA,UAAU,EAAE;AAAA,gBAAEY,IAAF,QAAEA,IAAF;AAAA,mBACV,KAAC,IAAD;AAAA,wBACE,KAAC,IAAD;AAAA,0BAAOA,IAAI,CAACC;AAAZ;AADF,cADU;AAAA;AAFd,UAJF;AAAA,QADF;AAgBD;;;;EAhC+BhB,KAAK,CAACiB,S;;AAkCxC,IAAMN,MAAM,GAAGO,UAAU,CAACC,MAAX,CAAkB;AAC/BP,EAAAA,cAAc,EAAE;AACdQ,IAAAA,IAAI,EAAE,CADQ;AAEdC,IAAAA,SAAS,EAAE;AAFG,GADe;AAK/BR,EAAAA,SAAS,EAAE;AACTS,IAAAA,UAAU,EAAE,CADH;AAETC,IAAAA,WAAW,EAAE,CAFJ;AAGTT,IAAAA,MAAM,EAAE,EAHC;AAITU,IAAAA,WAAW,EAAE,SAJJ;AAKTC,IAAAA,WAAW,EAAE,CALJ;AAMTC,IAAAA,WAAW,EAAE;AANJ;AALoB,CAAlB,CAAf;AAgBA,eAAezB,mBAAf","sourcesContent":["import React from 'react';\r\nimport { StyleSheet, View, TextInput, Button, Text, FlatList } from 'react-native'\r\n\r\nclass ConsultationService extends React.Component{\r\n\r\n  state={\r\n    data:[]\r\n  }\r\n\r\n  fetchData= async()=>{\r\n    const response = await fetch('http://localhost:3001/utilisateurs');\r\n    const utilisateurs = await response.json();\r\n    this.setState({data:utilisateur});\r\n\r\n  }\r\n  ComponentDidMount(){\r\n    this.fetchData();\r\n  }\r\n  render() {\r\n    return (\r\n      <View style={styles.main_container}>\r\n        <TextInput style={styles.textinput} placeholder='Titre du film'/>\r\n        <Button style={{height:50}}title='Rechercher' onPress={() => {}}/>\r\n        <Text>pouet</Text>\r\n        <FlatList\r\n          data={this.state.data}\r\n          renderItem={({item}) =>\r\n            <View>\r\n              <Text>{item.nom}</Text>\r\n            </View>\r\n          }\r\n        />\r\n\r\n      </View>\r\n    )\r\n  }\r\n}\r\nconst styles = StyleSheet.create({\r\n  main_container: {\r\n    flex: 1,\r\n    marginTop: 20\r\n  },\r\n  textinput: {\r\n    marginLeft: 5,\r\n    marginRight: 5,\r\n    height: 50,\r\n    borderColor: '#000000',\r\n    borderWidth: 1,\r\n    paddingLeft: 5\r\n  }\r\n})\r\n\r\n\r\nexport default ConsultationService\r\n"]},"metadata":{},"sourceType":"module"}