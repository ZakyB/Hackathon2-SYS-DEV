{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar ConsultationService = function (_React$Component) {\n  _inherits(ConsultationService, _React$Component);\n\n  var _super = _createSuper(ConsultationService);\n\n  function ConsultationService() {\n    var _this;\n\n    _classCallCheck(this, ConsultationService);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      data: []\n    };\n\n    _this.fetchData = function _callee() {\n      var response, users;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(fetch('http://localhost:3001/utilisateurs'));\n\n            case 2:\n              response = _context.sent;\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(response.json());\n\n            case 5:\n              users = _context.sent;\n\n              _this.setState({\n                data: users\n              });\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    return _this;\n  }\n\n  _createClass(ConsultationService, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchData();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return _jsxs(View, {\n        children: [_jsx(Text, {\n          children: \"Welcome\"\n        }), _jsx(FlatList, {\n          data: this.state.data,\n          keyExtractor: function keyExtractor(item, index) {\n            return index.toString();\n          },\n          renderItem: function renderItem(_ref) {\n            var item = _ref.item;\n            return _jsxs(View, {\n              style: {\n                backgroundColor: '#abc123',\n                padding: 10,\n                margin: 10\n              },\n              children: [_jsx(Text, {\n                style: {\n                  color: '#fff',\n                  fontWeight: 'bold'\n                },\n                children: item.nom\n              }), _jsx(Text, {\n                style: {\n                  color: '#fff'\n                },\n                children: item.email\n              }), _jsxs(Text, {\n                children: [\"City: \", item.address.city]\n              })]\n            });\n          }\n        })]\n      });\n    }\n  }]);\n\n  return ConsultationService;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#F5FCFF'\n  }\n});\nexport default ConsultationService;","map":{"version":3,"sources":["C:/Users/BENRABAH Zaky/Documents/GitHub/hackathon/Hackathon2-SYS-DEV/ReactNative/hackathon/components/ConsultationService.js"],"names":["React","ConsultationService","state","data","fetchData","fetch","response","json","users","setState","item","index","toString","backgroundColor","padding","margin","color","fontWeight","nom","email","address","city","Component","styles","StyleSheet","create","container","flex","justifyContent","alignItems"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;;;;;IAGMC,mB;;;;;;;;;;;;;;;UAEJC,K,GAAO;AACJC,MAAAA,IAAI,EAAC;AADD,K;;UAINC,S,GAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACcC,KAAK,CAAC,oCAAD,CADnB;;AAAA;AACHC,cAAAA,QADG;AAAA;AAAA,+CAEWA,QAAQ,CAACC,IAAT,EAFX;;AAAA;AAEHC,cAAAA,KAFG;;AAGT,oBAAKC,QAAL,CAAc;AAACN,gBAAAA,IAAI,EAAEK;AAAP,eAAd;;AAHS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;;;;;;WAMb,6BAAmB;AACjB,WAAKJ,SAAL;AACD;;;WACC,kBAAS;AACP,aACE,MAAC,IAAD;AAAA,mBACC,KAAC,IAAD;AAAA;AAAA,UADD,EAGC,KAAC,QAAD;AACA,UAAA,IAAI,EAAE,KAAKF,KAAL,CAAWC,IADjB;AAEA,UAAA,YAAY,EAAE,sBAACO,IAAD,EAAMC,KAAN;AAAA,mBAAgBA,KAAK,CAACC,QAAN,EAAhB;AAAA,WAFd;AAGA,UAAA,UAAU,EAAE;AAAA,gBAAEF,IAAF,QAAEA,IAAF;AAAA,mBAEZ,MAAC,IAAD;AAAM,cAAA,KAAK,EAAE;AAACG,gBAAAA,eAAe,EAAC,SAAjB;AAA2BC,gBAAAA,OAAO,EAAC,EAAnC;AAAsCC,gBAAAA,MAAM,EAAC;AAA7C,eAAb;AAAA,yBACG,KAAC,IAAD;AAAM,gBAAA,KAAK,EAAE;AAACC,kBAAAA,KAAK,EAAC,MAAP;AAAeC,kBAAAA,UAAU,EAAC;AAA1B,iBAAb;AAAA,0BAAiDP,IAAI,CAACQ;AAAtD,gBADH,EAEG,KAAC,IAAD;AAAM,gBAAA,KAAK,EAAE;AAACF,kBAAAA,KAAK,EAAC;AAAP,iBAAb;AAAA,0BAA8BN,IAAI,CAACS;AAAnC,gBAFH,EAGG,MAAC,IAAD;AAAA,qCAAaT,IAAI,CAACU,OAAL,CAAaC,IAA1B;AAAA,gBAHH;AAAA,cAFY;AAAA;AAHZ,UAHD;AAAA,QADF;AAoBD;;;;EApC8BrB,KAAK,CAACsB,S;;AAuCvC,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,cAAc,EAAE,QAFP;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAIThB,IAAAA,eAAe,EAAE;AAJR;AADoB,CAAlB,CAAf;AASD,eAAeZ,mBAAf","sourcesContent":["import React from 'react';\r\nimport { StyleSheet, View, TextInput, Button, Text, FlatList } from 'react-native'\r\n\r\nclass ConsultationService extends React.Component{\r\n\r\n  state ={\r\n     data:[]\r\n   }\r\n\r\n   fetchData= async()=>{\r\n     const response = await fetch('http://localhost:3001/utilisateurs');\r\n     const users = await response.json();\r\n     this.setState({data: users});\r\n\r\n   }\r\n componentDidMount(){\r\n   this.fetchData();\r\n }\r\n   render() {\r\n     return (\r\n       <View >\r\n        <Text>Welcome</Text>\r\n\r\n        <FlatList\r\n        data={this.state.data}\r\n        keyExtractor={(item,index) => index.toString()}\r\n        renderItem={({item}) =>\r\n\r\n        <View style={{backgroundColor:'#abc123',padding:10,margin:10}}>\r\n           <Text style={{color:'#fff', fontWeight:'bold'}}>{item.nom}</Text>\r\n           <Text style={{color:'#fff'}}>{item.email}</Text>\r\n           <Text>City: {item.address.city}</Text>\r\n          </View>\r\n\r\n        }\r\n\r\n        />\r\n       </View>\r\n     );\r\n   }\r\n }\r\n\r\n const styles = StyleSheet.create({\r\n   container: {\r\n     flex: 1,\r\n     justifyContent: 'center',\r\n     alignItems: 'center',\r\n     backgroundColor: '#F5FCFF',\r\n   },\r\n });\r\n\r\nexport default ConsultationService\r\n"]},"metadata":{},"sourceType":"module"}